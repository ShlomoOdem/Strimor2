function [Comb, NumOfCombinations, OK] = MakeRandomPartsCombinations(Parts,ConfigVisits,RandomType)
OK = true;
NumOfCombinations = [];

% GroupsNumber

        n = randi(ConfigVisits*2+1);
        
        if n == 1
            Comb = Parts;
            return
        end
        Comb = cell(1,3);
        for dir = 3:-1:1
            GroupNum = find(Parts(1,:,dir),1,"last");
            if n > GroupNum/2
                continue
            end
            switch RandomType
                case "Partial"
                    CombLoc = nchoosek(1:GroupNum,n);
                    for ii = size(CombLoc,1):-1:1
                        MultiGroup = Parts(:,CombLoc(ii,:),dir);
                        MultiGroup = MultiGroup(:);
                        Comb{dir}(sum(MultiGroup>0),ii) = MultiGroup(MultiGroup>0);
                    end
                case "Complete"
                    f = @(x) factorial(x);
                    RowSize = [0; f(GroupNum)./(f(GroupNum-(1:floor(GroupNum/2))').*f((1:floor(GroupNum/2))'))];
                    
                    for NumG = floor(GroupNum/2):-1:1
                        CombLoc(RowSize(NumG)+1:RowSize(NumG)+RowSize(NumG+1),1:NumG) = nchoosek(1:GroupNum,NumG);
                    end
                    for ii = size(CombLoc,1):-1:1
                        MultiGroup = Parts(:,CombLoc(ii,:),dir);
                        MultiGroup = MultiGroup(:);
                        Comb{dir}(sum(MultiGroup>0),ii) = MultiGroup(MultiGroup>0);
                    end
            end
        end
    end

NumOfCombinations = numel(Comb);

end
