function [NumberOfCOnfig, PathLength, Path, time] = ExtructPathFromTrees(Tree1,Tree2,ConnectedOrTargetNode,IsoAxises)
Path = [];
time = ConnectedOrTargetNode.time;

Tree1.Data(Tree1.LastIndex+1:end,:) = [];
Tree1.Data(Tree1.Data.time>time,:) = [];

NumberOfCOnfig = size(Tree1.Data,1);

Tree2.Data(Tree2.LastIndex+1:end,:) = [];
Tree2.Data(Tree2.Data.time>time,:) = [];

NumberOfCOnfig = NumberOfCOnfig + size(Tree2.Data,1);

Lable = ["IsomorphismStr1","IsoSiz1r","IsoSiz1c";"IsomorphismStr2","IsoSiz2r","IsoSiz2c";"IsomorphismStr3","IsoSiz3r","IsoSiz3c"];
MinLevel1 = 1e10;
MinLevel2 = 1e10;
for Axis = 1:IsoAxises
    FileConfigLoc = ismember(Tree1.Data(:,Lable(Axis,:)),ConnectedOrTargetNode(:,Lable(Axis,:)));

    FilesConnectedNode = Tree1.Data(FileConfigLoc,:);
    MinLevel1 = min([MinLevel1; FilesConnectedNode.Level]);

end

for Axis = 1:IsoAxises
    FileConfigLoc = ismember(Tree2.Data(:,Lable(Axis,:)),ConnectedOrTargetNode(:,Lable(Axis,:)));

    FilesConnectedNode = Tree2.Data(FileConfigLoc,:);
    MinLevel2 = min([MinLevel2; FilesConnectedNode.Level]);

end
PathLength = MinLevel1 + MinLevel2 + 2; 

[OK, PathFromStart, PathLengthStart] = ScannerIsomorphism(Tree1,ConnectedOrTargetNode,"Path");
            
[OK2, PathFromTarget, PathLengthTarget] = ScannerIsomorphism(Tree2,ConnectedOrTargetNode,"FlipAndPath");

Path = [PathFromTarget(1:end-1,:); PathFromStart];

PathLength = PathLengthStart + PathLengthTarget + 2;

end
