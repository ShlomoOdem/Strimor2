function Node = ConfigStruct2Node(Config,dir,step)
VarName = {'time','Index','ParentIndex','Type','Level','Cost', ...
               'Dir','Step','ConfigRow','ConfigCol','ParentRow','ParentCol',...
               'Visits','Cost2Target','ConfigStr','ParentStr','ConfigMat',...
               'ParentMat','IsomorphismMatrices1','IsomorphismMatrices2','IsomorphismMatrices3'...
               'IsomorphismStr1','IsomorphismStr2','IsomorphismStr3','IsoSiz1r','IsoSiz1c','IsoSiz2r','IsoSiz2c','IsoSiz3r','IsoSiz3c'};
VarType = {'duration','double','double','double','double',...
   'double','double','double','double','double','double','double'...
   ,'double','double','string','string','cell','cell','cell','cell'...
   ,'cell','string','string','string','double','double','double','double','double','double'};Node = table('Size',[1,numel(VarName)],'VariableTypes',VarType,'VariableNames',VarName);

Node = table('Size',[1,numel(VarName)],'VariableTypes',VarType,'VariableNames',VarName);
Node.ConfigMat = {Config.Status};
Node.ConfigRow = Config.Row;
Node.ConfigStr = string(Config.Str);
Node.ConfigCol = Config.Col;
Node.Type = Config.Type;

ConfigFullType = GetFullType(Config.Status,Config.Type);

[StartConfigIsomorphism, StartConfigIsomorphismStr,IsomorpSizes] =...
    CreatIsomorphismMetrices(Config.Status,ConfigFullType);

Node(1,["IsomorphismMatrices1","IsomorphismMatrices2"...
                       ,"IsomorphismMatrices3","IsomorphismStr1","IsomorphismStr2", ...
                       "IsomorphismStr3","IsoSiz1r","IsoSiz1c","IsoSiz2r", ...
                       "IsoSiz2c","IsoSiz3r","IsoSiz3c"]) = {StartConfigIsomorphism(1)...
                       ,StartConfigIsomorphism(2),StartConfigIsomorphism(3),...
                       StartConfigIsomorphismStr(1),StartConfigIsomorphismStr(2),...
                       StartConfigIsomorphismStr(3),IsomorpSizes(1,1),IsomorpSizes(1,2),...
                       IsomorpSizes(2,1),IsomorpSizes(2,2),IsomorpSizes(3,1),IsomorpSizes(3,2)};

if nargin>1
    Node.Dir = dir;
    Node.Step = step;
end


end
